1:朱武 别名 小旋风
    经验：之前做了5年java 开发，讲了3年java，讲了接近2年的前端
angular 现在目前市场上有两个版本 1.x  2.x
    angular 的课程它是5天的1个体系结构. 现在3天，过案例
2:angular 的学习
    1:angular 的模块化
    2：mvc 的设计思想
    3：mvc 设计思想在angluar 当中的实现
    4: 数据绑定  核心的部分（因为有这部分，我们就不用关注dom 操作，） 数据与逻辑
           1：单向数据绑定
           2：双向数据绑定 以数据和逻辑为核心.
    5:学习指令
           5.1 angualr 自带的指令
           (指令，通过一些字符串指定浏览器完成特定的任务)
               ng-app 定义应用边界的
               ng-controller 用来将视图跟控制器进行关联的
               ng-model 用来将视图的数据绑定在$scope 上面
               angular 的指令都是以ng- 开头
               ng-repeat 指令 (repeat 重复) 用来遍历数据的
               ng-class 为当前元素添加一个类名
               ng-if
               ng-show
               ng-hide
               ng-src
               ng-href
               ng-bind
               ng-bind-template
               ng-cloak
               ng-include
               ng-click
               ng-blur 事件的一系列
     这些指令对应到angular 里面会编译成方法，指令对应的方法大部分都是关于dom 操作的
 以后我们要操作dom，我们通过指令. 获取你也可以自己写js 操作。
            内置的指令，自定义指令
          5.2 自定义指令 directive 指令
              自定义指令，然后使用自己定义的指令
              自定义的指令有四种类型
              E(Element)C(class)M(mark)A(attribute)
              定义的指令可以通过四种方式去使用
              元素的方式  类名的方式  注释的方式 属性的方式
          5.3 作用域 概念 js 的作用域  我们要注意有一个根作用域 绑定全局的数据
              跟作用域也叫做  $rootScope 我们可以往这个根作用域上面绑定数据.
              也可以通过一个指令去进行绑定  ng-init 初始化
案例 todos mvc 这个案例是angular 官网的一个案例.
          1:增删改查 利用这些指令以及事件

     6:我们已经学习angular 的两大块功能
            1：双向数据绑定
            2：指令 (对应的是一堆api 的集合，以指令的形式对我们提供，api 过于简单)
          这里的这些指令不能满足我们的开发需求，用来操作dom
            3: 数据处理（angular 提供了过滤器）
            用来处理我们的数据的，其实它也是一堆的api，只不过这些api 方法是以过滤器的形式
           对外提供
             1：会用 (提供了9个过滤器，我们可以很轻松就会用这9个过滤器)
                 过滤器我们怎么去用
                 它是用来处理我们的数据. 用来处理字符串
                 1.1 过滤器，用来处理货币的 currency （字符串处理）
                 1.2 过滤器 date 事件的 (底层封装 new Date 对象)
                 1.3 filter 过滤器 搜索，过滤的  字符串处理
                 1.4 orderBy 用来对数据进行排序的当前页面的数据. 这个也用得多
                 1.5 number 处理数字  用得少  number
                 1.6 json 用来将一个对象转换成字符串  JSON.prase()
                 1.7 lowercase  转换小写
                 1.8 uppercase  转换大写
                 1.9 limitTo 截取字符串 也用得到 substring 截取
                 {{data|limitTo:'2':'5'}}
             2：原理
                 1.1 过滤器，用来处理货币的 currency （字符串处理）
                 1.2 过滤器 date 事件的 (底层封装 new Date 对象)
                 1.3 filter 过滤器 搜索，过滤的  字符串处理
                 1.4 orderBy 用来对数据进行排序的当前页面的数据. 这个也用得多
                 1.5 number 处理数字  用得少  number
                 1.6 json 用来将一个对象转换成字符串  JSON.prase()
                 1.7 lowercase  转换小写
                 1.8 uppercase  转换大写
                 1.9 limitTo 截取字符串 也用得到 substring 截取
                 {{data|limitTo:'2':'5'}}
             3：设计思想 减少我们开发代码的步骤
                 实际上又是一堆的api ，以另外的一种形式给我们进行提供，这样做的好处是减少我们的开发代码的步骤
                 1：以前我们获取到数据之后，我们要对数据进行处理，都是js 进行处理，方法进行处理
                 2：处理之后我还要想办法放在页面上面的某个位置
                 现在是直接在对应的angular 的模板里面编写逻辑，调用方法

            案例：
                显示批量的数据，这个数据因为是批量的，所以我们使用table 显示，table 我们可以使用bootstrap 的一些样式。
           显示了批量的数据之后
                1：可以根据姓名，年龄，微信，抖音，探探 对应的类型去进行搜索
                2：可以根据指定的类型进行排序 根据姓名排序，根据年龄排序.
            知识点：bootstrap+angular 搭建的一个案例
                1:  搭建环境
                2： 在table 里面去显示具体的模拟数据 ng-repeat
                3:  搜索的时候
                        3.1 什么时候进行搜索，找到具体的事件 keyup 输入关键字的时候进行搜索
                        3.2 定义事件对应的函数
                                3.2.1 函数里面的逻辑
                                        1:我要进行搜索的数据  $scope.persons
                                        2:准备搜索的条件  我需要根据那个key 进行搜素，key 的那个值进行搜索
                                        3：我要获取到搜索的条件
                                                需要根据那个类型进行搜索，用户输入的关键字
                                        4：把这个搜索条件组装成一个对象 obj[fildeName]=$scope.filedValue
                                        5:搜索的具体的逻辑就交给angular的过滤器的filter 过滤器
                                        6:我要使用过滤器，我需要在初始化控制器的时候传递过来 $filter，这个的理解跟$scope 的理解一样
                                        7:我要用到$filter 里面的filter 过滤器
                                                $filter("filter") 根据过滤器的名称获取到指定的过滤器，返回的是一个函数
                                        8:调用这个函数，传递数据，传递搜索条件，进行搜索，返回搜索结构，把结果赋值给$scope.person
                                        9：$scope 上面的数据发生改变，自动更新视图.
                        3.3 排序
                               1:找到事件  点击，事件源 ，table 第一行的tr 的td 上面进行点击需要排序
                               2:添加点击事件，我们需要传递参数，根据那个字段进行排序
                               3:排序有一个升序降序  点一下升序，在点一下降序
                               $scope.persons=$filter("orderBy")($scope.persons,filedName,isorderBy);
             4：自定义过滤器
                     4.1 假设内置的过滤器还不能满足我们的要求，我们可以自定义过滤器.
                     4.2 如何自定义过滤器 有一个方法叫做 filter 方法，用来自定义过滤器的
===============================================================================================================
1: angular 是 google 的mvc 框架 ，mvvm 框架
2: 它是以数据与逻辑为核心的 jquery 是以dom 操作为核心
3： angular 优点那些:模块化 双向数据绑定 指令 过滤器 依赖注入 服务 spa(单页面应用)
    1:模块化 angluar 里面以模块化的方式组织代码  angular.module()
    2: 使用mvc 的思想去对页面编写的代码进行分层
         <!DOCTYPE html>
         <html lang="en">
         <head>
             <meta charset="UTF-8">
             <title>angular 模板</title>
             <script src="libs/angular.min.js"></script>
             <script>
                   var App=angular.module("app",[]);
                   App.controller("appController",["$scope",function($scope){

                   }]);


             </script>
         </head>
         <body ng-app="app" ng-controller="appController">

         </body>
         </html>
    3：单项数据绑定  model 的数据怎么流向到视图  mvc
    4: 双向数据绑定  model 的数据流向视图 view 视图的view 的数据流向到model mvvm
    5:指令
       1：内置指令
               ng-app 定义应用边界
               ng-controller 将视图跟控制器进行关联
               ng-repeat 遍历数组的数据
               ng-model 在$scope 上面绑定数据
               ng-bind 也是用来获取数据，解决闪烁问题
               ng-bind-template 也是用来获取数据，解决闪烁问题
               ng-cloak 用来解决闪烁问题，但是有bug
               ng-init 往$rootScope 上面绑定数据
               ng-click ng-blur 事件的一系列
               ng-selected ng-readonly ng-checked ng-disabled 表单的只读属性操作
               ng-class 用来操作类名的接收两种参数，一个是字符串，一个是对象
               ng-include 去载入一个页面
               ng-show ng-hide ng-if 用来控制当前元素是否显示/用来控制当前元素是否删除.
               ng-src ng-href 这个跟src href 的区别
       2:自定义指令
               App.directive("itcast",function(){
                     return {
                         restrict:"ECMA" 支持的类型
                         template:""里面的内容
                         replace:true 是否替换
                     }
                })
    6 tabs 选项卡案例
    7 todos mvc 案例增删改查
    8 过滤器 （对数据进行操作的api）以过滤器的形式提供
            {{'data'|filter:'':''}}
    9：  9大 过滤器
            filter,date,currency orderBy,limitTo,number,lowercase,uppercase,json
           案例：angular+bootstrap 的案例 （搜索，排序）
    10 自定义过滤器
          filter("itcast",function(){
              return function(arg){
                    //第一个参数是arg 那个数据掉的arg 就指向到谁.
                    //对数据进行处理
              }
          });












